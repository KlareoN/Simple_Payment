import telebot

import requests
import json
import random

import config
import keyboard

bot = telebot.TeleBot(config.telegram_token, parse_mode='HTML')

class other_func():
	output = {}
	url_pay = {}
	qiwi_transfer = {}

@bot.message_handler(commands = ['start'])
def start_message(message):
	other_func.output[message.from_user.id] = []
	other_func.url_pay[message.from_user.id] = []
	other_func.qiwi_transfer[message.from_user.id] = []

	amount = config.price # —Ü–µ–Ω–∞
	temp_code = random.randint(1000000, 9999999)

	# temp_code,|,amount
	other_func.output[
		message.from_user.id
	].append(
		f'{temp_code},|,{amount}'.split(',|,')
	)

	# –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—à–º–∞—Ä–Ω–æ, –Ω–æ –Ω–∞ –¥–µ–ª–µ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞.
	if config.qiwi_transfer_anonim == 1:
		other_func.qiwi_transfer[
			message.from_user.id
		].append(
			f'–ö–∏–≤–∏ –ù–∏–∫,|,{config.qiwi_nick}'.split(',|,')
		)

		url_qiwi = f'https://qiwi.com/payment/form/99999?extra%5B%27account%27%5D={config.qiwi_nick}&amountInteger={other_func.output[message.from_user.id][0][1]}&amountFraction=0&blocked%5B0%5D=comment&blocked%5B1%5D=account&blocked%5B2%5D=sum'

		other_func.url_pay[
			message.from_user.id
		].append(
			f'{config.qiwi_number},|,{url_qiwi}'.split(',|,')
		)

		show_nick = '–í–Ω–∏–º–∞–Ω–∏–µ! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–µ—Ä–µ–≤–æ–¥—É.'
	else:
		other_func.qiwi_transfer[
			message.from_user.id
		].append(
			f'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞,|,{config.qiwi_number}'.split(',|,')
		)

		url_qiwi = f'https://qiwi.com/payment/form/99?extra%5B%27account%27%5D={config.qiwi_number}&extra%5B%27comment%27%5D={other_func.output[message.from_user.id][0][0]}&amountInteger={other_func.output[message.from_user.id][0][1]}&amountFraction=0&blocked%5B0%5D=comment&blocked%5B1%5D=account&blocked%5B2%5D=sum'
		other_func.url_pay[message.from_user.id].append(
			f'{config.qiwi_number},|,{url_qiwi}'.split(',|,')
		)

		show_nick = ''


	bot.send_message(
		message.chat.id,
		'üëã'
	)

	bot.send_message(
		message.chat.id,
		f'<b>–ü—Ä–∏–≤–µ—Ç</b>, —è –≤—ã—Å—Ç–∞–≤–∏–ª —Ç–µ–±–µ —Å—á—ë—Ç!\n\n'
		f'<b>{other_func.qiwi_transfer[message.from_user.id][0][0]}:</b> <code>{other_func.qiwi_transfer[message.from_user.id][0][1]}</code>\n'
		f'<b>–°—É–º–º–∞: </b><code>{other_func.output[message.from_user.id][0][1]} ‚ÇΩ</code>\n'
		f'<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: </b><code>{other_func.output[message.from_user.id][0][0]} </code>\n'
		f'<i>{show_nick}</i>',
		reply_markup=keyboard.main_keyboard(
			other_func.url_pay[message.from_user.id][0][1]
		)
	)


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
	if call.data == 'check':
		s = requests.Session()
		s.headers['authorization'] = 'Bearer ' + config.qiwi_token
		parameters = {'rows': '10'}
		h = s.get(f'https://edge.qiwi.com/payment-history/v1/persons/{config.qiwi_number}/payments', params=parameters)
		req = json.loads(h.text)

		for i in range(len(req['data'])):
			if req['data'][i]['comment'] == f'{other_func.output[call.message.chat.id][0][0]}' and req['data'][i]['sum']['amount'] == int(other_func.output[call.message.chat.id][0][1]) and req['data'][i]['sum']['currency'] == int(643):
				bot.edit_message_text(
					chat_id=call.message.chat.id,
					message_id=call.message.message_id-1,
					text=f'üëç'
				)
				bot.edit_message_text(
					chat_id=call.message.chat.id,
					message_id=call.message.message_id,
					text=f'<b>–°–ø–∞—Å–∏–±–æ</b>, –≤–∞—à –ø–ª–∞—Ç—ë–∂ –Ω–∞ —Å—É–º–º—É <code>{other_func.output[call.message.chat.id][0][1]} ‚ÇΩ</code> –±—ã–ª <b>—É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!</b>'
				)

				other_func.output[
					call.message.chat.id
				].append(
					f'-1,|,{int(other_func.output[call.message.chat.id][0][1])}'.split(',|,'))
				break

bot.polling()
